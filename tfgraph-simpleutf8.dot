digraph tfgraph {
	compound="true";
	newrank="true";
	"[root] aws_subnet.public-2a"->"[root] aws_vpc.stage";
	"[root] aws_subnet.public-2b"->"[root] aws_vpc.stage";
	"[root] aws_subnet.public-2c"->"[root] aws_vpc.stage";
	"[root] aws_vpc.stage"->"[root] provider.aws";
	"[root] meta.count-boundary (count boundary fixup)"->"[root] aws_subnet.public-2a";
	"[root] meta.count-boundary (count boundary fixup)"->"[root] aws_subnet.public-2b";
	"[root] meta.count-boundary (count boundary fixup)"->"[root] aws_subnet.public-2c";
	"[root] provider.aws (close)"->"[root] aws_subnet.public-2a";
	"[root] provider.aws (close)"->"[root] aws_subnet.public-2b";
	"[root] provider.aws (close)"->"[root] aws_subnet.public-2c";
	"[root] root"->"[root] meta.count-boundary (count boundary fixup)";
	"[root] root"->"[root] provider.aws (close)";
	"[root] aws_subnet.public-2a" [ label="aws_subnet.public-2a", shape="box" ];
	"[root] aws_subnet.public-2b" [ label="aws_subnet.public-2b", shape="box" ];
	"[root] aws_subnet.public-2c" [ label="aws_subnet.public-2c", shape="box" ];
	"[root] aws_vpc.stage" [ label="aws_vpc.stage", shape="box" ];
	"[root] meta.count-boundary (count boundary fixup)";
	"[root] provider.aws (close)";
	"[root] provider.aws" [ label="provider.aws", shape="diamond" ];
	"[root] root";

}
